@using System.Numerics
@using System.IO
@using SeeSharp.Geometry
@using TinyEmbree
@if (previewImageData != null) {
    <div class="probe-container" @onclick="UpdateProbePixel" style="width: @(Width)px; height: @(Height)px;">
        <div class="probe-marker" style="left: @(ProbePixelX)px; top: @(ProbePixelY)px;"></div>
        <img class="probe-image" src="data:image/png;base64,@previewImageData"/>
    </div>
}

@code {
    [Parameter]
    public string PreviewFile {
        get {
            return previewFile;
        }
        set {
            previewFile = value;
            var bytes = File.ReadAllBytes(previewFile);
            previewImageData = Convert.ToBase64String(bytes);
        }
    }

    [Parameter]
    public int Width { get; set; }

    [Parameter]
    public int Height { get; set; }

    [Parameter]
    public string PreviewImageBase64 {
        get {
            return previewImageData;
        }
        set {
            previewImageData = value;
        }
    }

    string previewFile;
    protected string previewImageData;

    [Parameter]
    public SeeSharp.Scene Scene { get; set; }

    public delegate Task OnClickAction(int col, int row, Ray ray, SurfacePoint hit);

    [Parameter]
    public OnClickAction OnClick { get; set; }

    protected int ProbePixelX { get; set; }
    protected int ProbePixelY { get; set; }

    protected async Task UpdateProbePixel(MouseEventArgs e) {
        ProbePixelX = (int)e.OffsetX;
        ProbePixelY = (int)e.OffsetY;

        // Compute the correct 3D point
        SurfacePoint probePoint = new();
        Ray ray = Scene.Camera.GenerateRay(
            new Vector2(ProbePixelX, ProbePixelY),
            new SeeSharp.Sampling.RNG(0)
        ).Ray;
        await Task.Run(() => {
            var hit = Scene.Raytracer.Trace(ray);
            if (!hit) {
                System.Console.WriteLine("Probe ray left scene!");
                return;
            }
            probePoint = hit;
        });

        if (OnClick != null)
            await OnClick(ProbePixelX, ProbePixelY, ray, probePoint);
    }
}