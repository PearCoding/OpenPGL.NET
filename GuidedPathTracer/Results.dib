#!fsharp

#r "nuget: SimpleImageIO"
open SimpleImageIO
open SimpleImageIO.FlipBook
HTML(FlipBook.MakeHeader()).Display() |> ignore

#!markdown

# Equal sample comparison: path guiding vs vanilla VCM

#!markdown

### Render times in seconds for 128spp

#!fsharp

let renderTime method =
    let json = System.IO.File.ReadAllText($"Results/CornellBox/{method}/Render.json")
    let doc = System.Text.Json.JsonDocument.Parse(json)
    doc.RootElement.GetProperty("RenderTime").GetDouble()
Map [
    ("Path tracing", 0.001 * renderTime "PathTracer")
    ("Guided", 0.001 * renderTime "Guided")
    ("VCM", 0.001 * renderTime "VCM")
]

#!markdown

### Rendered images

#!fsharp

FlipBook.Make [
    "Path tracing", new RgbImage("Results/CornellBox/PathTracer/Render.exr")
    "Guided", new RgbImage("Results/CornellBox/Guided/Render.exr")
    "VCM", new RgbImage("Results/CornellBox/VCM/Render.exr")
] |> HTML

#!markdown

### False-color error images

#!fsharp

let reference = new RgbImage("Results/CornellBox/Reference.exr")

let colorMap = new FalseColor(new LinearColormap(0.0f, 0.1f))

let tonemap (img:ImageBase) : ImageBase =
    let err = new MonochromeImage(img.Width, img.Height)
    for row in 0..img.Height-1 do
        for col in 0..img.Width-1 do
            let i = (img :?> RgbImage).GetPixel(col, row).Average
            let r = reference.GetPixel(col, row).Average
            err.SetPixel(col, row, (i - r)**2.0f / (r**2.0f + 0.001f))
    // let filtered = new MonochromeImage(img.Width, img.Height)
    // Filter.Gauss(err, filtered, 3);
    // colorMap.Apply(filtered)
    colorMap.Apply(err)

FlipBook.Make(tonemap, [
    "Path tracing", new RgbImage("Results/CornellBox/PathTracer/Render.exr")
    "Guided", new RgbImage("Results/CornellBox/Guided/Render.exr")
    "VCM", new RgbImage("Results/CornellBox/VCM/Render.exr")
]) |> HTML
